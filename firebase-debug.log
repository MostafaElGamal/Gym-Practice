[debug] [2019-10-26T08:22:06.559Z] ----------------------------------------------------------------------
[debug] [2019-10-26T08:22:06.562Z] Command:       C:\laragon\bin\nodejs\node-v12\node.exe C:\laragon\bin\nodejs\node-v12\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2019-10-26T08:22:06.563Z] CLI Version:   7.6.1
[debug] [2019-10-26T08:22:06.563Z] Platform:      win32
[debug] [2019-10-26T08:22:06.563Z] Node Version:  v12.2.0
[debug] [2019-10-26T08:22:06.564Z] Time:          Sat Oct 26 2019 10:22:06 GMT+0200 (Eastern European Standard Time)
[debug] [2019-10-26T08:22:06.564Z] ----------------------------------------------------------------------
[debug] [2019-10-26T08:22:06.564Z] 
[debug] [2019-10-26T08:22:06.573Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-10-26T08:22:06.574Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  Y:\Projcts\Vue Course\ninja-practice

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2019-10-26T08:22:17.487Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2019-10-26T08:22:18.297Z] <<< HTTP RESPONSE 200
[info] i  Using project ninja-practice (Ninja-Practice)
[info] 
=== Firestore Setup
[debug] [2019-10-26T08:22:18.896Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-10-26T08:22:18.897Z] > authorizing via signed-in user
[debug] [2019-10-26T08:22:18.898Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/ninja-practice  
 
[debug] [2019-10-26T08:22:19.376Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-10-26T08:22:21.790Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/ninja-practice/releases?pageSize=10&pageToken=  
 
[debug] [2019-10-26T08:22:23.088Z] <<< HTTP RESPONSE 200
[debug] [2019-10-26T08:22:23.089Z] Found ruleset: projects/ninja-practice/rulesets/26560b75-c10d-45ba-a9eb-4a22f87129c8
[debug] [2019-10-26T08:22:23.090Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/ninja-practice/rulesets/26560b75-c10d-45ba-a9eb-4a22f87129c8  
 
[debug] [2019-10-26T08:22:23.511Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-10-26T08:22:26.717Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/ninja-practice/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2019-10-26T08:22:26.718Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/ninja-practice/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2019-10-26T08:22:27.326Z] <<< HTTP RESPONSE 200
[debug] [2019-10-26T08:22:27.329Z] <<< HTTP RESPONSE 200
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2019-10-26T08:22:32.398Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2019-10-26T08:22:35.602Z] Error: unable to verify the first certificate
    at TLSSocket.onConnectSecure (_tls_wrap.js:1285:34)
    at TLSSocket.emit (events.js:196:13)
    at TLSSocket.EventEmitter.emit (domain.js:471:20)
    at TLSSocket._finishInit (_tls_wrap.js:758:8)
    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:590:12)
[error] 
[error] Error: Server Error. unable to verify the first certificate
